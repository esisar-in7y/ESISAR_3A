#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>

#define RED    "\033[0;31m"
#define BLUE   "\033[0;34m"
#define GREEN  "\033[0;32m"
#define YELLOW "\033[0;33m"
#define NC     "\033[0m"

#define TAILLE_BUF 100

int main (void) {
	
	pid_t pid,pid2;
	pid_t ownpid;

	int p1[2];	
	pipe(p1);


	if ((pid=fork())) {
	
		if ( 0==(pid2 = fork()) ) { /*fils 2*/

		/*attends la mort du fils 1 avant le fils 2*/
			waitpid(pid,NULL,0);
			pid = pid2;

			printf( RED "je suis le second fils (%d)\n" NC,getpid() ) ;
		
			char mes[]=YELLOW "je suis le second fils\n" NC;
			int n = sizeof(mes);
		
			write(p1[1], mes, n);
		}
	}

	else /* fils 1*/
	{
		printf( RED "je suis le premier fils\n" NC ) ;
		
		char mes[]=GREEN "je suis le premier fils\n" NC;
		int n = sizeof(mes);
		
		write(p1[1], mes, n);



	}

	ownpid = getpid();

	if (pid == -1) {
		perror("Creation de processus");
		exit(2);
	}
	else if (pid == 0) {
		printf(NC "Je suis le " BLUE "fils " NC ". Mon PID est "GREEN "%d.\n" NC "", ownpid);
		// printf("Mon père est "GREEN "%d\n" NC "",getppid());
		sleep(1);
	}
	else {
		printf("Je suis le " RED "père " NC ". Mon PID est " GREEN "%d.\n" NC "", ownpid);
		waitpid(pid2,NULL,0);
		printf("Mon second enfant est mort. Il avait le PID " GREEN "%d.\n" NC "", pid2);
		
		
		char buf[TAILLE_BUF];
		int nb;

		nb = read(p1[0], buf, TAILLE_BUF);
		printf("Affichage du tube:\n");
		if(nb >0) write(STDOUT_FILENO, &buf, nb);
		else puts("");
		
		printf( RED "routine terminée, mon père était " GREEN "%d\n" NC "", getppid() );
	}


	exit(0);
}
